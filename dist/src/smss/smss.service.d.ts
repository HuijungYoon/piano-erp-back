import { CreateSmssDto } from './dto/create-smss.dto';
import { UpdateSmssDto } from './dto/update-smss.dto';
import { Students } from 'src/entities/Students';
import { Repository } from 'typeorm';
import { SMSs } from 'src/entities/SMSs';
import { SendSmssDto } from './dto/send-smss.dto';
import { Lessons } from 'src/entities/Lessons';
type newStudentProps = {
    name: string;
    paymentdue: string;
    progress: string;
    age: number;
    tutionfee: number;
    tel: string;
    address: string;
    lessontime: string;
    lessondate: Date;
};
export declare class SmssService {
    private studentsRepository;
    private smssRepository;
    private lessonsRepository;
    constructor(studentsRepository: Repository<Students>, smssRepository: Repository<SMSs>, lessonsRepository: Repository<Lessons>);
    private readonly serviceId;
    private readonly accessKey;
    private readonly secretKey;
    private readonly url;
    private makeSignature;
    private makeSignature2;
    checkSmsStatus(requestId: string): Promise<any>;
    private sendMsg;
    replacePlaceholders(content: string, newStudent: newStudentProps | any): string;
    extractProperties(student: Students, lesson?: Lessons): {
        name: string;
        paymentdue: string;
        progress: string;
        age: number;
        tutionfee: number;
        tel: string;
        address: string;
        teacher: string;
        lessontime: string;
        lessondate: Date;
    } | {
        name: string;
        paymentdue: string;
        progress: string;
        age: number;
        tutionfee: number;
        tel: string;
        address: string;
        teacher?: undefined;
        lessontime?: undefined;
        lessondate?: undefined;
    };
    sendSMS(sendSmssDTo: SendSmssDto): Promise<any>;
    create(createSmssDto: CreateSmssDto): string;
    findAll(): Promise<SMSs[]>;
    findOne(id: number): string;
    update(id: number, updateSmssDto: UpdateSmssDto): string;
    remove(id: number): string;
}
export {};
